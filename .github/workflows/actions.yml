name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_IMAGE_NAME: saaignment3-Namrata
  HF_SPACE_REPO_URL: https://huggingface.co/spaces/Namratakghodke/Housing_Price
  SONAR_PROJECT_KEY: namrataonlinetrainingorg
  SONAR_ORGANIZATION: placework459
  SONAR_HOST_URL: https://sonarcloud.io/organizations/placework459/projects

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install dependencies from requirements.txt

      - name: Run tests with coverage
        run: |
          pytest --maxfail=1 --disable-warnings -q --cov=tests --cov-report=xml --cov-report=html

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ env.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ env.SONAR_ORGANIZATION }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}

      - name: Get Commit hash
        id: vars
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker Image with commit hash
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.GIT_SHA }} \
                       -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest .

      - name: Scan Docker images with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.GIT_SHA }}
          format: table
          exit-code: 1 
          severity: "CRITICAL,HIGH"

      - name: Push Docker Image
        if: success()
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.GIT_SHA }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Install Git LFS and Push to Hugging Face Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          sudo apt-get update
          sudo apt-get install -y git-lfs
          git lfs install --system
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          echo "Setting remote for Hugging Face Space"
          git remote add huggingface https://oauth2:${HF_TOKEN}@${HF_SPACE_REPO_URL#https://}
          echo "Pushing to Hugging Face Space"
          git push --force huggingface main
          echo "Successfully pushed to Hugging Face Space"

      - name: Slack Notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo, message, author, job, ref
          message: |
            Build Status: ${{ job.status }}
            Commit: ${{ github.sha
            
